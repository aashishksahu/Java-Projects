package Project;

import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import java.sql.*;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;


class EmptyConditionsError extends Exception{
    public void Message(){
        JOptionPane.showMessageDialog(null, "<HTML><BODY><font color = red>Conditions can't be empty, this may delete the entire table</font></body><html>");
    }
}

public class CRUD extends javax.swing.JFrame {

    /**
     * Creates new form CRUD
     */
    public CRUD() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        create = new javax.swing.JDialog();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        backToCrud = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        createDB = new javax.swing.JDialog();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        createDB_dbname = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        createDB_submit = new javax.swing.JButton();
        createDB_dbpassword = new javax.swing.JPasswordField();
        backToCreate = new javax.swing.JButton();
        createTable = new javax.swing.JDialog();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        createTable_dbname = new javax.swing.JTextField();
        createTable_password = new javax.swing.JPasswordField();
        createTable_query = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        createTable_tablename = new javax.swing.JTextField();
        createTable_submit = new javax.swing.JButton();
        back_to_create = new javax.swing.JButton();
        readTable = new javax.swing.JDialog();
        jLabel8 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        readTable_dbname = new javax.swing.JTextField();
        readTable_tablename = new javax.swing.JTextField();
        readTable_password = new javax.swing.JPasswordField();
        readTable_submit = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        readTable_table = new javax.swing.JTable();
        back_to_crud = new javax.swing.JButton();
        delete = new javax.swing.JDialog();
        jLabel14 = new javax.swing.JLabel();
        delete_options = new javax.swing.JComboBox<>();
        delete_deleteDB = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        delete_deleteDBName = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        delete_deleteDBPassword = new javax.swing.JPasswordField();
        jButton8 = new javax.swing.JButton();
        delete_deleteTable = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        delete_TableDBName = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        delete_Tabletablename = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        delete_tablePassword = new javax.swing.JPasswordField();
        jButton9 = new javax.swing.JButton();
        delete_deleteAttribute = new javax.swing.JPanel();
        delete_AttrDBName = new javax.swing.JTextField();
        delete_AttrTableName = new javax.swing.JTextField();
        delete_AttrAttributeName = new javax.swing.JTextField();
        delete_AttrPassword = new javax.swing.JPasswordField();
        jButton10 = new javax.swing.JButton();
        jLabel20 = new javax.swing.JLabel();
        delete_deleteRecord = new javax.swing.JPanel();
        delete_recordDBName = new javax.swing.JTextField();
        delete_recordTableName = new javax.swing.JTextField();
        delete_recordPassword = new javax.swing.JPasswordField();
        delete_recordConditions = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        update = new javax.swing.JDialog();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        update_DBName = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        update_TableName = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        update_password = new javax.swing.JPasswordField();
        jLabel27 = new javax.swing.JLabel();
        update_SET = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        update_WHERE = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        back_to_CRUD1 = new javax.swing.JButton();
        insert = new javax.swing.JDialog();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        insert_dbname = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        insert_tableName = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        insert_password = new javax.swing.JPasswordField();
        insert_values = new javax.swing.JTextField();
        insert_submit1 = new javax.swing.JButton();
        insert_submit2 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        createDialog = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        Insert = new javax.swing.JButton();

        create.setMinimumSize(new java.awt.Dimension(500, 371));
        create.setSize(new java.awt.Dimension(500, 371));
        create.setLocationRelativeTo(null);

        jButton1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jButton1.setText("<HTML><BODY><center>Create New<br>Database</center></body></html>");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Create");

        backToCrud.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        backToCrud.setText("Back");
        backToCrud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToCrudActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jButton2.setText("<HTML><BODY><center>Create New<br>Table</center></body></html>");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createLayout = new javax.swing.GroupLayout(create.getContentPane());
        create.getContentPane().setLayout(createLayout);
        createLayout.setHorizontalGroup(
            createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(63, 63, 63))
            .addGroup(createLayout.createSequentialGroup()
                .addGap(93, 93, 93)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(backToCrud, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(210, 210, 210))
        );
        createLayout.setVerticalGroup(
            createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(createLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 81, Short.MAX_VALUE)
                .addComponent(backToCrud, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(86, 86, 86))
        );

        createDB.setMinimumSize(new java.awt.Dimension(500, 371));
        createDB.setSize(new java.awt.Dimension(500, 371));
        createDB.setLocationRelativeTo(null);

        jLabel3.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Create new Database");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel4.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel4.setText("Database Name");

        createDB_dbname.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel5.setText("Password");

        createDB_submit.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        createDB_submit.setText("Submit");
        createDB_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDB_submitActionPerformed(evt);
            }
        });

        backToCreate.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        backToCreate.setText("Back");
        backToCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backToCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createDBLayout = new javax.swing.GroupLayout(createDB.getContentPane());
        createDB.getContentPane().setLayout(createDBLayout);
        createDBLayout.setHorizontalGroup(
            createDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createDBLayout.createSequentialGroup()
                .addContainerGap(88, Short.MAX_VALUE)
                .addGroup(createDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(createDBLayout.createSequentialGroup()
                        .addGroup(createDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(createDBLayout.createSequentialGroup()
                                .addGroup(createDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(57, 57, 57))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, createDBLayout.createSequentialGroup()
                                .addComponent(createDB_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)))
                        .addGroup(createDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(backToCreate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(createDB_dbname)
                            .addComponent(createDB_dbpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(87, 87, 87))
        );
        createDBLayout.setVerticalGroup(
            createDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createDBLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(53, 53, 53)
                .addGroup(createDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createDB_dbname, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(createDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createDB_dbpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(createDBLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createDB_submit)
                    .addComponent(backToCreate))
                .addContainerGap(107, Short.MAX_VALUE))
        );

        createTable.setMinimumSize(new java.awt.Dimension(412, 340));
        createTable.setResizable(false);
        createTable.setSize(new java.awt.Dimension(422, 340));
        createTable.setLocationRelativeTo(null);

        jLabel6.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Create Table");

        jLabel7.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel7.setText("Database Name");

        jLabel9.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel9.setText("Password");

        createTable_dbname.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        createTable_dbname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTable_dbnameActionPerformed(evt);
            }
        });

        createTable_password.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N

        createTable_query.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        createTable_query.setText("Enter attributes with data types");
        createTable_query.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                createTable_queryFocusGained(evt);
            }
        });
        createTable_query.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTable_queryActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel10.setText("Table Name");

        createTable_tablename.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        createTable_tablename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTable_tablenameActionPerformed(evt);
            }
        });

        createTable_submit.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        createTable_submit.setText("Submit");
        createTable_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createTable_submitActionPerformed(evt);
            }
        });

        back_to_create.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        back_to_create.setText("Back");
        back_to_create.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_to_createActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout createTableLayout = new javax.swing.GroupLayout(createTable.getContentPane());
        createTable.getContentPane().setLayout(createTableLayout);
        createTableLayout.setHorizontalGroup(
            createTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTableLayout.createSequentialGroup()
                .addGap(70, 70, 70)
                .addGroup(createTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, createTableLayout.createSequentialGroup()
                        .addComponent(createTable_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(back_to_create, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(createTableLayout.createSequentialGroup()
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(createTable_tablename, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(createTable_query)
                    .addGroup(createTableLayout.createSequentialGroup()
                        .addGroup(createTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(createTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(createTable_password, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(createTable_dbname, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(79, Short.MAX_VALUE))
        );
        createTableLayout.setVerticalGroup(
            createTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(createTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(createTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createTable_dbname, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(createTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(createTable_password, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addGap(12, 12, 12)
                .addGroup(createTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(createTable_tablename, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addComponent(createTable_query, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(createTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createTable_submit)
                    .addComponent(back_to_create))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        readTable.setMinimumSize(new java.awt.Dimension(715, 490));
        readTable.setSize(new java.awt.Dimension(715, 490));
        readTable.setLocationRelativeTo(null);

        jLabel8.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("View Table");

        jLabel11.setText("Database");

        jLabel12.setText("Table");

        jLabel13.setText("Password");

        readTable_tablename.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readTable_tablenameActionPerformed(evt);
            }
        });

        readTable_submit.setText("Submit");
        readTable_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readTable_submitActionPerformed(evt);
            }
        });

        readTable_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        readTable_table.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(readTable_table);

        back_to_crud.setText("Back");
        back_to_crud.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_to_crudActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout readTableLayout = new javax.swing.GroupLayout(readTable.getContentPane());
        readTable.getContentPane().setLayout(readTableLayout);
        readTableLayout.setHorizontalGroup(
            readTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(readTableLayout.createSequentialGroup()
                .addGroup(readTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(readTableLayout.createSequentialGroup()
                        .addGroup(readTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(readTableLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(readTableLayout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel11)
                                .addGap(18, 18, 18)
                                .addComponent(readTable_dbname, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12)
                                .addGap(18, 18, 18)
                                .addComponent(readTable_tablename, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18)
                                .addComponent(readTable_password, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(readTable_submit, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 20, Short.MAX_VALUE))
                    .addGroup(readTableLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, readTableLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(back_to_crud, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        readTableLayout.setVerticalGroup(
            readTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(readTableLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(readTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(readTable_dbname, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(readTable_tablename, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(readTable_password, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(readTable_submit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 285, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(back_to_crud)
                .addGap(12, 12, 12))
        );

        delete.setMinimumSize(new java.awt.Dimension(437, 390));
        delete.setSize(new java.awt.Dimension(437, 390));
        delete.getContentPane().setLayout(null);
        delete.setLocationRelativeTo(null);

        jLabel14.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Delete");
        delete.getContentPane().add(jLabel14);
        jLabel14.setBounds(10, 10, 400, 60);

        delete_options.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_options.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select One", "Database", "Table", "Record", "Attribute" }));
        delete_options.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_optionsActionPerformed(evt);
            }
        });
        delete.getContentPane().add(delete_options);
        delete_options.setBounds(20, 70, 380, 30);

        delete_deleteDB.setLayout(null);

        jLabel15.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel15.setText("Enter Database Name");
        delete_deleteDB.add(jLabel15);
        jLabel15.setBounds(30, 30, 170, 30);

        delete_deleteDBName.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_deleteDB.add(delete_deleteDBName);
        delete_deleteDBName.setBounds(220, 30, 120, 30);

        jLabel16.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel16.setText("Enter Password");
        delete_deleteDB.add(jLabel16);
        jLabel16.setBounds(30, 80, 170, 30);
        delete_deleteDB.add(delete_deleteDBPassword);
        delete_deleteDBPassword.setBounds(220, 80, 120, 30);

        jButton8.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jButton8.setText("Submit");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        delete_deleteDB.add(jButton8);
        jButton8.setBounds(150, 120, 80, 33);

        delete_deleteDB.setVisible(false);

        delete.getContentPane().add(delete_deleteDB);
        delete_deleteDB.setBounds(20, 120, 380, 180);

        delete_deleteTable.setLayout(null);

        jLabel17.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel17.setText("Enter Database Name");
        delete_deleteTable.add(jLabel17);
        jLabel17.setBounds(30, 20, 160, 30);

        delete_TableDBName.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_deleteTable.add(delete_TableDBName);
        delete_TableDBName.setBounds(200, 20, 140, 30);

        jLabel18.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel18.setText("Enter Table Name");
        delete_deleteTable.add(jLabel18);
        jLabel18.setBounds(30, 60, 160, 30);

        delete_Tabletablename.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_deleteTable.add(delete_Tabletablename);
        delete_Tabletablename.setBounds(200, 60, 140, 30);

        jLabel19.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel19.setText("Enter Password");
        delete_deleteTable.add(jLabel19);
        jLabel19.setBounds(30, 100, 160, 30);

        delete_tablePassword.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_deleteTable.add(delete_tablePassword);
        delete_tablePassword.setBounds(200, 100, 140, 30);

        jButton9.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jButton9.setText("Submit");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        delete_deleteTable.add(jButton9);
        jButton9.setBounds(140, 140, 80, 33);

        delete_deleteTable.setVisible(false);

        delete.getContentPane().add(delete_deleteTable);
        delete_deleteTable.setBounds(20, 120, 380, 180);

        delete_deleteAttribute.setPreferredSize(new java.awt.Dimension(380, 180));
        delete_deleteAttribute.setLayout(null);
        delete_deleteAttribute.setVisible(false);

        delete_AttrDBName.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_AttrDBName.setText("Enter Database");
        delete_AttrDBName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                delete_AttrDBNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                delete_AttrDBNameFocusLost(evt);
            }
        });
        delete_deleteAttribute.add(delete_AttrDBName);
        delete_AttrDBName.setBounds(20, 20, 160, 30);

        delete_AttrTableName.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_AttrTableName.setText("Enter Table");
        delete_AttrTableName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                delete_AttrTableNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                delete_AttrTableNameFocusLost(evt);
            }
        });
        delete_deleteAttribute.add(delete_AttrTableName);
        delete_AttrTableName.setBounds(200, 20, 160, 30);

        delete_AttrAttributeName.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_AttrAttributeName.setText("Enter Attribute");
        delete_AttrAttributeName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                delete_AttrAttributeNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                delete_AttrAttributeNameFocusLost(evt);
            }
        });
        delete_deleteAttribute.add(delete_AttrAttributeName);
        delete_AttrAttributeName.setBounds(20, 60, 340, 30);

        delete_AttrPassword.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_AttrPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_AttrPasswordActionPerformed(evt);
            }
        });
        delete_deleteAttribute.add(delete_AttrPassword);
        delete_AttrPassword.setBounds(200, 100, 160, 30);

        jButton10.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jButton10.setText("Submit");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        delete_deleteAttribute.add(jButton10);
        jButton10.setBounds(150, 140, 78, 33);

        jLabel20.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel20.setText("Enter Password");
        delete_deleteAttribute.add(jLabel20);
        jLabel20.setBounds(20, 100, 160, 30);

        delete.getContentPane().add(delete_deleteAttribute);
        delete_deleteAttribute.setBounds(20, 120, 380, 180);

        delete_deleteRecord.setPreferredSize(new java.awt.Dimension(380, 180));
        delete_deleteRecord.setLayout(null);

        delete_recordDBName.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_recordDBName.setText("Enter Database");
        delete_recordDBName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                delete_recordDBNameFocusGained(evt);
            }
        });
        delete_deleteRecord.add(delete_recordDBName);
        delete_recordDBName.setBounds(10, 10, 170, 30);

        delete_recordTableName.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_recordTableName.setText("Enter Table");
        delete_recordTableName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                delete_recordTableNameFocusGained(evt);
            }
        });
        delete_deleteRecord.add(delete_recordTableName);
        delete_recordTableName.setBounds(200, 10, 170, 30);

        delete_recordPassword.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_deleteRecord.add(delete_recordPassword);
        delete_recordPassword.setBounds(200, 50, 170, 30);

        delete_recordConditions.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        delete_deleteRecord.add(delete_recordConditions);
        delete_recordConditions.setBounds(200, 90, 170, 30);

        jButton6.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jButton6.setText("Submit");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        delete_deleteRecord.add(jButton6);
        jButton6.setBounds(150, 140, 90, 33);

        jLabel21.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel21.setText("Enter Password");
        delete_deleteRecord.add(jLabel21);
        jLabel21.setBounds(10, 50, 170, 30);

        jLabel22.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel22.setText("Enter Conditions");
        delete_deleteRecord.add(jLabel22);
        jLabel22.setBounds(10, 90, 170, 30);

        delete_deleteRecord.setVisible(false);

        delete.getContentPane().add(delete_deleteRecord);
        delete_deleteRecord.setBounds(20, 120, 380, 180);

        jButton7.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jButton7.setText("Back");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        delete.getContentPane().add(jButton7);
        jButton7.setBounds(340, 300, 62, 33);

        update.setMinimumSize(new java.awt.Dimension(500, 390));
        update.setSize(new java.awt.Dimension(500, 390));
        update.setLocationRelativeTo(null);
        update.getContentPane().setLayout(null);

        jLabel23.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel23.setText("Update");
        update.getContentPane().add(jLabel23);
        jLabel23.setBounds(10, 10, 460, 60);

        jLabel24.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel24.setText("Enter Database");
        update.getContentPane().add(jLabel24);
        jLabel24.setBounds(30, 100, 160, 30);

        update_DBName.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        update.getContentPane().add(update_DBName);
        update_DBName.setBounds(200, 100, 250, 30);

        jLabel25.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel25.setText("Enter Table");
        update.getContentPane().add(jLabel25);
        jLabel25.setBounds(30, 140, 160, 30);

        update_TableName.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        update.getContentPane().add(update_TableName);
        update_TableName.setBounds(200, 140, 250, 30);

        jLabel26.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel26.setText("Enter Password");
        update.getContentPane().add(jLabel26);
        jLabel26.setBounds(30, 180, 160, 30);

        update_password.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        update.getContentPane().add(update_password);
        update_password.setBounds(200, 180, 250, 30);

        jLabel27.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel27.setText("SET");
        update.getContentPane().add(jLabel27);
        jLabel27.setBounds(30, 220, 60, 30);

        update_SET.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        update_SET.setText("column1 = value1, column2 = value2,...");
        update_SET.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                update_SETFocusGained(evt);
            }
        });
        update.getContentPane().add(update_SET);
        update_SET.setBounds(100, 220, 350, 30);

        jLabel28.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel28.setText("Where");
        update.getContentPane().add(jLabel28);
        jLabel28.setBounds(30, 260, 60, 30);

        update_WHERE.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        update_WHERE.setText("Enter condition (column = something...)");
        update_WHERE.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                update_WHEREFocusGained(evt);
            }
        });
        update.getContentPane().add(update_WHERE);
        update_WHERE.setBounds(100, 260, 350, 30);

        jButton11.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jButton11.setText("Submit");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        update.getContentPane().add(jButton11);
        jButton11.setBounds(150, 310, 84, 32);

        back_to_CRUD1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        back_to_CRUD1.setText("Back");
        back_to_CRUD1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_to_CRUD1ActionPerformed(evt);
            }
        });
        update.getContentPane().add(back_to_CRUD1);
        back_to_CRUD1.setBounds(250, 310, 90, 32);

        insert.setMinimumSize(new java.awt.Dimension(500, 390));
        insert.setPreferredSize(new java.awt.Dimension(500, 390));
        insert.setSize(new java.awt.Dimension(500, 390));
        insert.setLocationRelativeTo(null);
        insert.getContentPane().setLayout(null);

        jLabel29.setFont(new java.awt.Font("Consolas", 1, 18)); // NOI18N
        jLabel29.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel29.setText("Insert");
        insert.getContentPane().add(jLabel29);
        jLabel29.setBounds(6, 6, 488, 67);

        jLabel30.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel30.setText("Enter Database");
        insert.getContentPane().add(jLabel30);
        jLabel30.setBounds(40, 106, 170, 30);

        insert_dbname.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        insert.getContentPane().add(insert_dbname);
        insert_dbname.setBounds(280, 107, 175, 30);

        jLabel31.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel31.setText("Enter Table");
        insert.getContentPane().add(jLabel31);
        jLabel31.setBounds(40, 143, 170, 30);

        insert_tableName.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        insert.getContentPane().add(insert_tableName);
        insert_tableName.setBounds(280, 144, 175, 30);

        jLabel32.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jLabel32.setText("Enter Password");
        insert.getContentPane().add(jLabel32);
        jLabel32.setBounds(40, 181, 170, 30);
        insert.getContentPane().add(insert_password);
        insert_password.setBounds(280, 180, 175, 30);

        insert_values.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                insert_valuesFocusGained(evt);
            }
        });
        insert_values.setEnabled(false);
        insert.getContentPane().add(insert_values);
        insert_values.setBounds(40, 217, 415, 37);

        insert_submit1.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        insert_submit1.setText("Submit");
        insert_submit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_submit1ActionPerformed(evt);
            }
        });
        insert.getContentPane().add(insert_submit1);
        insert_submit1.setBounds(212, 272, 82, 33);

        insert_submit2.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        insert_submit2.setText("Submit");
        insert_submit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insert_submit2ActionPerformed(evt);
            }
        });
        insert.getContentPane().add(insert_submit2);
        insert_submit2.setBounds(212, 272, 82, 33);

        jButton12.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jButton12.setText("Back");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        insert.getContentPane().add(jButton12);
        jButton12.setBounds(390, 270, 70, 33);

        jButton13.setText("jButton13");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(500, 371));
        setSize(new java.awt.Dimension(500, 371));

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Database Manager");

        createDialog.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        createDialog.setText("Create");
        createDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createDialogActionPerformed(evt);
            }
        });

        exit.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        exit.setText("Exit");
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jButton3.setText("Read");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton5.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        jButton5.setText("Delete");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        Insert.setFont(new java.awt.Font("Consolas", 0, 14)); // NOI18N
        Insert.setText("Insert");
        Insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                            .addComponent(createDialog, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(54, 54, 54)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(exit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(123, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Insert, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(211, 211, 211))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(createDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Insert, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(exit)
                .addContainerGap(51, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        createDB.show();
        create.hide();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void createDB_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDB_submitActionPerformed
        try{
            //fetch the name of the database to be created
            String dbName = createDB_dbname.getText();
            
            //fetch the root password 
            String password = new String(createDB_dbpassword.getPassword());
            
            // create connection
            CreateConnection newCon = new CreateConnection();
            Statement newStat = newCon.initiate(password);
            
            if (newStat == null){
                JOptionPane.showMessageDialog(null, "Connection Error. Please ensure the password or Database name is correct.\n");
            }
            
            // create database
            int result =  newStat.executeUpdate("CREATE DATABASE "+dbName);
            
            JOptionPane.showMessageDialog(null, "Database created with code "+result);
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_createDB_submitActionPerformed

    private void createDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createDialogActionPerformed
        create.show();
    }//GEN-LAST:event_createDialogActionPerformed

    private void backToCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToCreateActionPerformed
        createDB.dispose();
        create.show();
    }//GEN-LAST:event_backToCreateActionPerformed

    private void backToCrudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backToCrudActionPerformed
        create.dispose();
    }//GEN-LAST:event_backToCrudActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void createTable_dbnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTable_dbnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createTable_dbnameActionPerformed

    private void createTable_queryFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_createTable_queryFocusGained
        createTable_query.setText("");
    }//GEN-LAST:event_createTable_queryFocusGained

    private void createTable_tablenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTable_tablenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createTable_tablenameActionPerformed

    private void createTable_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTable_submitActionPerformed
         // fetch DatabBase name
         String dbname = createTable_dbname.getText();
         
         // fetch Table name
         String tableName = createTable_tablename.getText();
         
         // get the root MySQL password
         String Password = new String(createTable_password.getPassword());
         
         // fetch the table query
         String query = createTable_query.getText();
         
         try{
            // create connection to database
            CreateConnection newCon = new CreateConnection();
            Statement newStat = newCon.initiate(dbname, Password);
            
            if (newStat == null){
                JOptionPane.showMessageDialog(null,"Connection Error. Please ensure the password or Database name is correct.\n");
            }
            
            // execute table creatioin query
            String finalQuery = "create table "+tableName+"("+query+");";
            
            // execute query in database
            @SuppressWarnings("null")
            int rs_msg = newStat.executeUpdate(finalQuery);
            
            // show result            
            JOptionPane.showMessageDialog(null,"Table successfully created with code "+rs_msg);
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }//GEN-LAST:event_createTable_submitActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        createTable.show();
        create.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void back_to_createActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_to_createActionPerformed
        createTable.dispose();
        create.show();
        
    }//GEN-LAST:event_back_to_createActionPerformed

    private void readTable_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readTable_submitActionPerformed
        //fetch the name of the database to be created
        String dbName = readTable_dbname.getText();
        //fetch the root password 
        String password = new String(readTable_password.getPassword());
        // fetch table name
        String tableName = readTable_tablename.getText();
        
        try{
            // create connection
            CreateConnection newCon = new CreateConnection();
            Statement newStat = newCon.initiate(dbName, password);
            
            if (newStat == null){
                JOptionPane.showMessageDialog(null,"Connection Error. Please ensure the password or Database name is correct.\n");
            }
            
            // result set contains the data fetched from the MySQL table
            @SuppressWarnings("null")
            ResultSet rs = newStat.executeQuery("select * from "+tableName);
            
            // get column names
            Vector<String> columnNames = new Vector<>();
            
            // fetch result set meta data (no. of columns and column names)
            ResultSetMetaData metaData = rs.getMetaData();
            int columnCount = metaData.getColumnCount();
            
            // loop till the number of columns in the table and append each
            // column name in a vector
            for(int i = 1; i<=columnCount; i++){
                columnNames.add(metaData.getColumnName(i));
            }
            
            // total number of rows
            rs.last();
            int rowCount = rs.getRow();
            
            // move the cursor to one row before the first row
            rs.beforeFirst();
            
            // create a table model
            DefaultTableModel tableModel = new DefaultTableModel(columnNames, rowCount);
            
            // there could be empty rows in the table, therefore, they
            // must be removed
            for(int i = 0; i<rowCount; i++){
                // the row at 0th index will be removed
                // after which the remaining rows will move up
                // and at the next iteration the 0th row will be romoved
                // this'll happen until the loop ends execution
                tableModel.removeRow(0);
            }
            
            
            // add rows to the table model
            while(rs.next()){
                // vector to hold the values in a row for each column
                Vector row = new Vector(columnCount);
                
                // loop over all columns
                for(int i = 1; i<=columnCount; i++){
                    // add values for each column in a single row
                    row.add(rs.getObject(i));    
                }
                
                // add each row vector to the table model
                tableModel.addRow(row);
                
            }
            
            // finally set the tableModel object to the JTable container 
            // in the GUI
            readTable_table.setModel(tableModel);
            
            // close the statment after all resultSets have completed execution
            newStat.closeOnCompletion();
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }//GEN-LAST:event_readTable_submitActionPerformed

    private void readTable_tablenameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readTable_tablenameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_readTable_tablenameActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        readTable.show();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void back_to_crudActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_to_crudActionPerformed
        readTable_dbname.setText("");
        readTable_password.setText("");
        readTable_tablename.setText("");
        DefaultTableModel dm = (DefaultTableModel)readTable_table.getModel();
        while(dm.getRowCount() > 0)
        {
            dm.removeRow(0);
        }
        readTable.dispose();

    }//GEN-LAST:event_back_to_crudActionPerformed

    private void createTable_queryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createTable_queryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_createTable_queryActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        
        delete_AttrAttributeName.setText("");
        delete_AttrDBName.setText("");
        delete_AttrTableName.setText("");
        delete_TableDBName.setText("");
        delete_Tabletablename.setText("");
        delete_deleteDBName.setText("");
        delete_recordConditions.setText("");
        delete_recordDBName.setText("");
        delete_recordTableName.setText("");      
        delete_AttrPassword.setText("");
        delete_deleteDBPassword.setText("");
        delete_recordPassword.setText("");
        delete_tablePassword.setText("");
        
        delete_deleteDB.setVisible(false);
        delete_deleteTable.setVisible(false);
        delete_deleteAttribute.setVisible(false);
        delete_deleteRecord.setVisible(false);
        delete.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        try{
            //fetch the name of the database to be created
            String dbName = delete_deleteDBName.getText();
            
            //fetch the root password 
            String password = new String(delete_deleteDBPassword.getPassword());
            
            // create connection
            CreateConnection newCon = new CreateConnection();
            Statement newStat = newCon.initiate(password);
            
            if (newStat == null){
                JOptionPane.showMessageDialog(null, "Connection Error. Please ensure the password or Database name is correct.\n");
            }
            
            // Delete database
            int result =  newStat.executeUpdate("DROP DATABASE "+dbName);
            
            JOptionPane.showMessageDialog(null, "Database deleted with code "+result);
            
        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        delete.show();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        try{
            //fetch the name of the database to be created
            String dbName = delete_TableDBName.getText();
            
            // fetch the table name
            String tableName = delete_Tabletablename.getText();
            
            //fetch the root password 
            String password = new String(delete_tablePassword.getPassword());
            
            // create connection
            CreateConnection newCon = new CreateConnection();
            Statement newStat = newCon.initiate(dbName, password);
            
            if (newStat == null){
                JOptionPane.showMessageDialog(null, "Connection Error. Please ensure the password or Database name is correct.\n");
            }
            
            int res = newStat.executeUpdate("DROP TABLE "+tableName+"; ");
            
            JOptionPane.showMessageDialog(null, "Table deleted with code "+res);
            
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void delete_optionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_optionsActionPerformed
        String option = (String) delete_options.getSelectedItem();
        
        delete_deleteDB.setVisible(false);
        delete_deleteTable.setVisible(false);
        delete_deleteAttribute.setVisible(false);
        delete_deleteRecord.setVisible(false);
        
        if(option.equals("Database")){
            delete_deleteDB.setVisible(true);
        }
        
        if(option.equals("Table")){
            delete_deleteTable.setVisible(true);
        }
        
        if(option.equals("Record")){
            delete_deleteRecord.setVisible(true);
        }
        
        if(option.equals("Attribute")){
            delete_deleteAttribute.setVisible(true);
        }
        
    }//GEN-LAST:event_delete_optionsActionPerformed

    private void delete_AttrDBNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_delete_AttrDBNameFocusGained
        delete_AttrDBName.setText("");
    }//GEN-LAST:event_delete_AttrDBNameFocusGained

    private void delete_AttrDBNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_delete_AttrDBNameFocusLost
        
    }//GEN-LAST:event_delete_AttrDBNameFocusLost

    private void delete_AttrTableNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_delete_AttrTableNameFocusGained
        delete_AttrTableName.setText("");
    }//GEN-LAST:event_delete_AttrTableNameFocusGained

    private void delete_AttrTableNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_delete_AttrTableNameFocusLost
        
    }//GEN-LAST:event_delete_AttrTableNameFocusLost

    private void delete_AttrAttributeNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_delete_AttrAttributeNameFocusGained
        delete_AttrAttributeName.setText("");
    }//GEN-LAST:event_delete_AttrAttributeNameFocusGained

    private void delete_AttrAttributeNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_delete_AttrAttributeNameFocusLost
        
    }//GEN-LAST:event_delete_AttrAttributeNameFocusLost

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // fetch Database name, Table Name, Attribute Name, Conditions
        String dbName = delete_AttrDBName.getText();
        String tableName = delete_AttrTableName.getText();
        String columnName = delete_AttrAttributeName.getText();
        String Password = new String(delete_AttrPassword.getPassword());
        
               
        try{
            // establish database connection
            // create connection
            CreateConnection newCon = new CreateConnection();
            Statement newStat = newCon.initiate(dbName, Password);

            if (newStat == null){
                JOptionPane.showMessageDialog(null, "Connection Error. Please ensure the password or Database name is correct.\n");
            }
            
            int rs = newStat.executeUpdate("ALTER TABLE "+tableName+" drop "+columnName+";");
            
            JOptionPane.showMessageDialog(null, "Column deleted");
            
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }//GEN-LAST:event_jButton10ActionPerformed

    private void delete_AttrPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_AttrPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_AttrPasswordActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // fetch Database name, Table Name, Attribute Name, Conditions
        String dbName = delete_recordDBName.getText();
        String tableName = delete_recordTableName.getText();
        String Password = new String(delete_recordPassword.getPassword());
        String conditions = delete_recordConditions.getText();
        
        try{
            // establish database connection
            CreateConnection newCon = new CreateConnection();
            Statement newStat = newCon.initiate(dbName, Password);

            if (newStat == null){
                JOptionPane.showMessageDialog(null, "Connection Error. Please ensure the password or Database name is correct.\n");
            }
            
            // conditions must not be empty
            if(conditions.isEmpty()){
                throw new EmptyConditionsError();
            }
            
            int res = newStat.executeUpdate("DELETE from "+tableName+" "+conditions+";");
            
            JOptionPane.showMessageDialog(null, "Record deleted with code "+res);
            
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }catch(EmptyConditionsError e){
            e.Message();
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void delete_recordDBNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_delete_recordDBNameFocusGained
        delete_recordDBName.setText("");
    }//GEN-LAST:event_delete_recordDBNameFocusGained

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        update.show();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void update_SETFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_update_SETFocusGained
        update_SET.setText("");
    }//GEN-LAST:event_update_SETFocusGained

    private void update_WHEREFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_update_WHEREFocusGained
        update_WHERE.setText("");
    }//GEN-LAST:event_update_WHEREFocusGained

    private void back_to_CRUD1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_to_CRUD1ActionPerformed
        update_DBName.setText("");
        update_SET.setText("column1 = value1, column2 = value2,...");
        update_WHERE.setText("Enter condition (column = something...)");
        update_TableName.setText("");
        update_password.setText("");
        update.dispose();
    }//GEN-LAST:event_back_to_CRUD1ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        
        // Fetch Database Name
        String dbname = update_DBName.getText();
        // fetch table name
        String tableName = update_TableName.getText();
        // fetch password
        String password = new String(update_password.getPassword());
        // fetch columns to be updated
        String set_columns = update_SET.getText();
        // fetch where conditions
        String whereConditions = update_WHERE.getText();
        
        try{
            // establish database connection
            CreateConnection newCon = new CreateConnection();
            Statement newStat = newCon.initiate(dbname, password);

            if (newStat == null){
                JOptionPane.showMessageDialog(null, "Connection Error. Please ensure the password or Database name is correct.\n");
            }
            
            int res = newStat.executeUpdate("UPDATE "+tableName+" SET "+set_columns+" WHERE "+whereConditions);
            
            JOptionPane.showMessageDialog(null, "Table Updated");
            
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }//GEN-LAST:event_jButton11ActionPerformed

    private void InsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertActionPerformed
        insert.show();
    }//GEN-LAST:event_InsertActionPerformed

    private void insert_submit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_submit1ActionPerformed
        // Fetch Database Name
        String dbname = insert_dbname.getText();
        // fetch table name
        String tableName = insert_tableName.getText();
        // fetch password
        String password = new String(insert_password.getPassword());
        
        ArrayList<String> columnNames = new ArrayList<>();
        
        try{
            // establish database connection
            CreateConnection newCon = new CreateConnection();
            Statement newStat = newCon.initiate(dbname, password);

            if (newStat == null){
                JOptionPane.showMessageDialog(null, "Connection Error. Please ensure the password or Database name is correct.\n");
            }
            
            ResultSet rs = newStat.executeQuery("SELECT * FROM "+tableName);
            
            //extract column names using result set meta data
            ResultSetMetaData rsms = rs.getMetaData();
            int columnCount = rsms.getColumnCount();
            
            for(int i = 1; i<=columnCount; i++){
                columnNames.add(rsms.getColumnName(i));
            }
            
            String format = columnNames.toString().replaceAll("\\[", "").replaceAll("\\]", "");
            
            insert_values.setEnabled(true);
            
            insert_values.setText("enter in format(text in quotes): "+format);
            
            insert_submit1.setVisible(false);
            insert_submit2.setVisible(true);
            
            
            
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
        
    }//GEN-LAST:event_insert_submit1ActionPerformed

    private void insert_submit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insert_submit2ActionPerformed
        // Fetch Database Name
        String dbname = insert_dbname.getText();
        // fetch table name
        String tableName = insert_tableName.getText();
        // fetch password
        String password = new String(insert_password.getPassword());
        // fetch values
        String values = insert_values.getText();
        
        try{
            // establish database connection
            CreateConnection newCon = new CreateConnection();
            Statement newStat = newCon.initiate(dbname, password);

            if (newStat == null){
                JOptionPane.showMessageDialog(null, "Connection Error. Please ensure the password or Database name is correct.\n");
            }
            
            int res = newStat.executeUpdate("INSERT into "+tableName+" values("+values+");");
            
            JOptionPane.showMessageDialog(null, "Values inserted with code "+res);
            
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e.getMessage());
        }
            
    }//GEN-LAST:event_insert_submit2ActionPerformed

    private void insert_valuesFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_insert_valuesFocusGained
        insert_values.setText("");
    }//GEN-LAST:event_insert_valuesFocusGained

    private void delete_recordTableNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_delete_recordTableNameFocusGained
        delete_recordTableName.setText("");
    }//GEN-LAST:event_delete_recordTableNameFocusGained

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        insert_dbname.setText("");
        insert_password.setText("");
        insert_tableName.setText("");
        insert_values.setText("");
        insert.dispose();
    }//GEN-LAST:event_jButton12ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CRUD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CRUD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Insert;
    private javax.swing.JButton backToCreate;
    private javax.swing.JButton backToCrud;
    private javax.swing.JButton back_to_CRUD1;
    private javax.swing.JButton back_to_create;
    private javax.swing.JButton back_to_crud;
    private javax.swing.JDialog create;
    private javax.swing.JDialog createDB;
    private javax.swing.JTextField createDB_dbname;
    private javax.swing.JPasswordField createDB_dbpassword;
    private javax.swing.JButton createDB_submit;
    private javax.swing.JButton createDialog;
    private javax.swing.JDialog createTable;
    private javax.swing.JTextField createTable_dbname;
    private javax.swing.JPasswordField createTable_password;
    private javax.swing.JTextField createTable_query;
    private javax.swing.JButton createTable_submit;
    private javax.swing.JTextField createTable_tablename;
    private javax.swing.JDialog delete;
    private javax.swing.JTextField delete_AttrAttributeName;
    private javax.swing.JTextField delete_AttrDBName;
    private javax.swing.JPasswordField delete_AttrPassword;
    private javax.swing.JTextField delete_AttrTableName;
    private javax.swing.JTextField delete_TableDBName;
    private javax.swing.JTextField delete_Tabletablename;
    private javax.swing.JPanel delete_deleteAttribute;
    private javax.swing.JPanel delete_deleteDB;
    private javax.swing.JTextField delete_deleteDBName;
    private javax.swing.JPasswordField delete_deleteDBPassword;
    private javax.swing.JPanel delete_deleteRecord;
    private javax.swing.JPanel delete_deleteTable;
    private javax.swing.JComboBox<String> delete_options;
    private javax.swing.JTextField delete_recordConditions;
    private javax.swing.JTextField delete_recordDBName;
    private javax.swing.JPasswordField delete_recordPassword;
    private javax.swing.JTextField delete_recordTableName;
    private javax.swing.JPasswordField delete_tablePassword;
    private javax.swing.JButton exit;
    private javax.swing.JDialog insert;
    private javax.swing.JTextField insert_dbname;
    private javax.swing.JPasswordField insert_password;
    private javax.swing.JButton insert_submit1;
    private javax.swing.JButton insert_submit2;
    private javax.swing.JTextField insert_tableName;
    private javax.swing.JTextField insert_values;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JDialog readTable;
    private javax.swing.JTextField readTable_dbname;
    private javax.swing.JPasswordField readTable_password;
    private javax.swing.JButton readTable_submit;
    private javax.swing.JTable readTable_table;
    private javax.swing.JTextField readTable_tablename;
    private javax.swing.JDialog update;
    private javax.swing.JTextField update_DBName;
    private javax.swing.JTextField update_SET;
    private javax.swing.JTextField update_TableName;
    private javax.swing.JTextField update_WHERE;
    private javax.swing.JPasswordField update_password;
    // End of variables declaration//GEN-END:variables
}
